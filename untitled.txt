a_0 = 0 * a
tot = 0 

# get trees seeable from left and right
for row in range(1, len(a)-1):
    
    curr_max = a[row, 0]
    for col in range(1, len(a)-1):
        if a[row, col] <= curr_max:
            max_position = col - 1
            break
        else:
            curr_max = a[row, col]
            if a_0[row, col] == 0:
                a_0[row, col]  = 1
                tot +=1 

    curr_max = a[row, -1]
    for col in reversed(range(max_position, len(a)-1)):
        if a[row, col] <= curr_max:
            break
        else:
            curr_max = a[row, col]
            if a_0[row, col] == 0:
                a_0[row, col] = 1
                tot +=1 
                
# get trees seeable from top and bottom

for col in range(1, len(a)-1):
    
    curr_max = a[0, col]
    for row in range(1, len(a)-1):
        if a[row, col] <= curr_max:
            max_position = row - 1
            break
        else:
            curr_max = a[row, col]
            if a_0[row, col] == 0:
                a_0[row, col]  = 1
                tot +=1 

    curr_max = a[-1, col]
    for row in reversed(range(max_position, len(a)-1)):
        if a[row, col] <= curr_max:
            break
        else:
            curr_max = a[row, col]
            if a_0[row, col] == 0:
                a_0[row, col] = 1
                tot +=1 
                
tot + 4 * len(a) - 4